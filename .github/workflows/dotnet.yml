# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: dotnet publish
      run: dotnet publish -c Release
    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: '${{env.DOTNET_ROOT}}/issues.server/appsettings.json'
      env:
        AppSettings.Secret: ${{ secrets.Secret }}
        AppSettings.connectionString: ${{ secrets.ConnectionString }}

  deploy:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.REMOTE_USER }}
          SSH_KEY: ${{ secrets.REMOTE_SSH_KEY }}
          SSH_HOST: ${{ secrets.REMOTE_HOST }}
      - name: Stop the service
        run: ssh staging 'sudo systemctl stop issues'
      - name: Start the service
        run: ssh staging 'sudo systemctl start issues'
      - name: Reload nginx
        run: ssh staging 'sudo service nginx reload'
